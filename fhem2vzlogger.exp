#!/usr/bin/expect
# just do a chmod 755 one the script
# ./YOUR_SCRIPT_NAME.sh $YOUHOST $PORT
# if you get "Escape character is '^]'" as the output it means got connected otherwise it has failed
#
# http://inguza.com/document/expect-and-tcl-mini-reference-manual
#

set readinginc [lindex $argv 0]
set ip [lindex $argv 1]
set port [lindex $argv 2]

# disable log to stdout
log_user 0
#log_file -a logs/fhem2vzloggerusr
#exp_internal -f logs/fhem2vzloggerint 0

# define the readings of interest.
source $readinginc

set timeout 10

# wait for connection
spawn telnet $ip $port
expect {
  "'^]'." { }
  default { exit 1 }
}

foreach device [array names readings] {
   foreach reading $readings($device) {
   # identifier
      set identifier $device.$reading
   # catch timestamp
      set cmd "{time_str2num(ReadingsTimestamp(\"$device\",\"$reading\",\"\"))}\r"
      send $cmd
      expect {
         $cmd                            { exp_continue }
         -re {[0-9]{10}\s+}              { set ts [string trim $expect_out(0,string) ] }
         timeout                         { set ts 1645496542 }
         default                         { set ts 1645496541 }
      }
   # catch reading value
      set cmd "{ReadingsVal(\"$device\",\"$reading\",\"\")}\r"
      send $cmd
      expect {
         $cmd                            { exp_continue }
         -re {[+-]?([0-9]+\.)?[0-9]+\s+} { set val [string trim $expect_out(0,string) ] }
         timeout                         { set val 4242 }
         default                         { set val 4343 }
      }
      if { [info exists ts] && [info exists val] } {
         # echo $i $t $v
         # i.e. Garden.temperature 1376398997 18.3
         puts "$identifier $ts $val"
      }
      if { [info exists ts] }            { unset ts }
      if { [info exists val] }           { unset val }
   }
}

# exit telnet gracefully
send "exit\n"
expect eof
